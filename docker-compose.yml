services:
  postgres:
    container_name: database
    ports:
      - "5431:5432"
    image: postgres
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./docker_db:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'",
        ]
      interval: 5s
      timeout: 60s
      retries: 5
      start_period: 80s

  init-db:
    image: postgres
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_HOST: "${POSTGRES_HOST}"
      POSTGRES_PORT: "${POSTGRES_PORT}"
    volumes:
      - ./server/run-migrations.sh:/usr/local/bin/run-migrations.sh
      - ./server/database.sql:/docker-entrypoint-initdb.d/database.sql
    entrypoint: ["/bin/bash", "/usr/local/bin/run-migrations.sh"]

  server:
    container_name: server
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    healthcheck:
      test: "curl -f http://localhost:${SERVER_PORT}/health-check"
    command: bash -c "npm start"
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_HOST: "${POSTGRES_HOST}"
      SERVER_PORT: "${SERVER_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
      init-db:
        condition: service_completed_successfully

  call-api:
    image: curlimages/curl
    depends_on:
      server:
        condition: service_healthy
    entrypoint: "curl -X POST http://server:${SERVER_PORT}/api/devices"

  client:
    container_name: client
    build:
      context: ./client
      dockerfile: Dockerfile
    command: bash -c "npm run preview"
    ports:
      - "4173:4173"
    depends_on:
      server:
        condition: service_healthy
      call-api:
        condition: service_completed_successfully
